{
	"info": {
		"_postman_id": "408cd3ca-3e14-4e84-8be8-a207681bb82d",
		"name": "QAjorney",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25014761"
	},
	"item": [
		{
			"name": "QAjorney Base",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vinicius.tomas@zappts.com.br\",\r\n    \"senha\": \"balelinha123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}usuarios/login",
							"host": [
								"{{URL_BASE}}usuarios"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/Listar",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}herois/listar",
							"host": [
								"{{URL_BASE}}herois"
							],
							"path": [
								"listar"
							]
						}
					},
					"response": []
				},
				{
					"name": "/Listar/{id}",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2M2Y4MWI3ZGNkNWY1OTk3Njk2NzY5ZGEiLCJpYXQiOjE2NzcyNDIyNTUsImV4cCI6MTY3NzI0NDA1NX0.oKgtDt4jvHfoiOS5SNwceZFCYZLF6dWK95NpzYeitIc",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}herois/listar/4",
							"host": [
								"{{URL_BASE}}herois"
							],
							"path": [
								"listar",
								"4"
							],
							"query": [
								{
									"key": "raça",
									"value": "anão",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/Cadastrar",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Gherk\",\r\n  \"genero\": \"Masculino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}herois/cadastrar",
							"host": [
								"{{URL_BASE}}herois"
							],
							"path": [
								"cadastrar"
							]
						}
					},
					"response": []
				},
				{
					"name": "/Atualizar/{id}",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"lva Brambledanc\",\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Arqueiro\",\r\n    \"xp\": 5523166268\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}herois/atualizar/1",
							"host": [
								"{{URL_BASE}}herois"
							],
							"path": [
								"atualizar",
								"1"
							],
							"query": [
								{
									"key": "id",
									"value": "20",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/Deletar/{id}",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}herois/deletar/5",
							"host": [
								"{{URL_BASE}}herois"
							],
							"path": [
								"deletar",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "/Rebase",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2M2Y4MWI3ZGNkNWY1OTk3Njk2NzY5ZGEiLCJpYXQiOjE2NzcyNDIyNTUsImV4cCI6MTY3NzI0NDA1NX0.oKgtDt4jvHfoiOS5SNwceZFCYZLF6dWK95NpzYeitIc",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"senha\": \"balelinha123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}herois/rebase",
							"host": [
								"{{URL_BASE}}herois"
							],
							"path": [
								"rebase"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Testes API",
			"item": [
				{
					"name": "/Login",
					"item": [
						{
							"name": "Login email invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 401\", function () {\r",
											"  pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Login com email invalido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData.Message)).to.eql(\"Usuário não está autorizado, usuário ou senha incorretos\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2M2Y4MWI3ZGNkNWY1OTk3Njk2NzY5ZGEiLCJpYXQiOjE2NzcyNDk4MjIsImV4cCI6MTY3NzI1MTYyMn0.YUPTUfXbY6YgKDHhbFJyIBc40g5RnxZ6jk8UstxlOIM",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"vinicius.tomas1@zappts.com.br\",\r\n    \"senha\": \"balelinha123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}usuarios/login",
									"host": [
										"{{URL_BASE}}usuarios"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login com o senha invalida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 401\", function () {\r",
											"  pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Login com senha invalida\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData.Message)).to.eql(\"Usuário não está autorizado, usuário ou senha incorretos\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2M2Y4MWI3ZGNkNWY1OTk3Njk2NzY5ZGEiLCJpYXQiOjE2NzcyNDk4MjIsImV4cCI6MTY3NzI1MTYyMn0.YUPTUfXbY6YgKDHhbFJyIBc40g5RnxZ6jk8UstxlOIM",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"vinicius.tomas@zappts.com.br\",\r\n    \"senha\": \"balelinha13\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}usuarios/login",
									"host": [
										"{{URL_BASE}}usuarios"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login email com formato invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Login email com formato invalido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'email' está com formato inválido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2M2Y4MWI3ZGNkNWY1OTk3Njk2NzY5ZGEiLCJpYXQiOjE2NzcyNDk4MjIsImV4cCI6MTY3NzI1MTYyMn0.YUPTUfXbY6YgKDHhbFJyIBc40g5RnxZ6jk8UstxlOIM",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"vinicius.tomas1zappts.com.br\",\r\n    \"senha\": \"balelinha123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}usuarios/login",
									"host": [
										"{{URL_BASE}}usuarios"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login com o campo email vazio",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Login com o campo email vazio\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'email' está vazio\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2M2Y4MWI3ZGNkNWY1OTk3Njk2NzY5ZGEiLCJpYXQiOjE2NzcyNDk4MjIsImV4cCI6MTY3NzI1MTYyMn0.YUPTUfXbY6YgKDHhbFJyIBc40g5RnxZ6jk8UstxlOIM",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"senha\": \"balelinha123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}usuarios/login",
									"host": [
										"{{URL_BASE}}usuarios"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login com o campo email com numeros",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Login com o campo email com numeros\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'email' está com formato inválido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2M2Y4MWI3ZGNkNWY1OTk3Njk2NzY5ZGEiLCJpYXQiOjE2NzcyNDk4MjIsImV4cCI6MTY3NzI1MTYyMn0.YUPTUfXbY6YgKDHhbFJyIBc40g5RnxZ6jk8UstxlOIM",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": 123123,\r\n    \"senha\": \"balelinha123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}usuarios/login",
									"host": [
										"{{URL_BASE}}usuarios"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login com o campo email com null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Login com o campo email com null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'email' está com formato inválido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2M2Y4MWI3ZGNkNWY1OTk3Njk2NzY5ZGEiLCJpYXQiOjE2NzcyNDk4MjIsImV4cCI6MTY3NzI1MTYyMn0.YUPTUfXbY6YgKDHhbFJyIBc40g5RnxZ6jk8UstxlOIM",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": null,\r\n    \"senha\": \"balelinha123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}usuarios/login",
									"host": [
										"{{URL_BASE}}usuarios"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login com o campo senha vazio",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Login com o campo senha vazio\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'senha' está vazio\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2M2Y4MWI3ZGNkNWY1OTk3Njk2NzY5ZGEiLCJpYXQiOjE2NzcyNDk4MjIsImV4cCI6MTY3NzI1MTYyMn0.YUPTUfXbY6YgKDHhbFJyIBc40g5RnxZ6jk8UstxlOIM",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"vinicius.tomas@zappts.com.br\",\r\n    \"senha\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}usuarios/login",
									"host": [
										"{{URL_BASE}}usuarios"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login sem o campo obrigatorio email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Login sem o campo obrigatorio email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'email' é obrigatório\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \r\n    \"senha\": \"balelinha123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}usuarios/login",
									"host": [
										"{{URL_BASE}}usuarios"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login sem o campo obrigatorio senha",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Login sem o campo obrigatorio senha\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'senha' é obrigatório\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"vinicius.tomas@zappts.com.br\"\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}usuarios/login",
									"host": [
										"{{URL_BASE}}usuarios"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"  pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chave do login\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData.chave)).to.eql(\"b5LJerpgX&yukgB\");\r",
											"});\r",
											"\r",
											"const responseRequest = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"token\", responseRequest.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"vinicius.tomas@zappts.com.br\",\r\n    \"senha\": \"balelinha123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}usuarios/login",
									"host": [
										"{{URL_BASE}}usuarios"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/Listar e /Listar/{id}",
					"item": [
						{
							"name": "/Listar sem o Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 401\", function () {\r",
											"  pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Listar sem o Token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData.Message)).to.eql(\"Usuário não está autorizado, faça login novamente\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_BASE}}herois/listar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"listar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Listar valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validação da lista\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].id)).to.eql(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_BASE}}herois/listar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"listar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Listar/{id} valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Listar com o ID valido\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validação da lista\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].id)).to.eql(5);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_BASE}}herois/listar/5",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"listar",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Listar/{id} com ID invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 404\", function () {\r",
											"  pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Listar com ID invalido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData.Message)).to.eql(\"O campo 'id' não foi encontrado\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL_BASE}}herois/listar/55",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"listar",
										"55"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/Cadastro",
					"item": [
						{
							"name": "/ Cadastro valido sem token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 401\", function () {\r",
											"  pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Chave do login\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData.Message)).to.eql(\"Usuário não está autorizado, faça login novamente\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Gherk\",\r\n  \"genero\": \"Masculino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"  pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chave do login\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].nome)).to.eql(\"Balelinha 777\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Balelinha 777\",\r\n  \"genero\": \"Masculino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro campo obrigatorio nome vazio",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo obrigatorio nome 'vazio'\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'nome' está vazio\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"\",\r\n  \"genero\": \"Masculino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro Não enviar o campo obrigatorio nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Não enviar o campo obrigatorio nome\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'nome' é obrigatório\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \r\n  \"genero\": \"Masculino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro campo obrigatorio nome com string numerica",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo obrigatorio nome com string numerica\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'nome' está com formato inválido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"345345\",\r\n  \"genero\": \"Masculino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro campo obrigatorio nome com numeros",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo obrigatorio nome com numeros \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'nome' está com formato inválido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": 1232123,\r\n  \"genero\": \"Masculino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro campo obrigatorio nome com null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo obrigatorio nome com null \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'nome' está com formato inválido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": null,\r\n  \"genero\": \"Masculino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro campo obrigatorio genero valido, Masculino",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"  pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo obrigatorio genero valido, Masculino\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].genero)).to.eql(\"Masculino\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"balelinha 555\",\r\n  \"genero\": \"Masculino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro campo obrigatorio genero valido, Feminino",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"  pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo obrigatorio genero valido, Feminino\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].genero)).to.eql(\"Feminino\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"balelinha 444\",\r\n  \"genero\": \"Feminino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro campo obrigatorio genero invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo obrigatorio genero invalido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'genero' está com formato inválido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"balelinha 444\",\r\n  \"genero\": \"astronauta\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro Não enviar o campo obrigatorio genero",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Não enviar o campo obrigatorio genero\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'genero' é obrigatório\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"balelinha 555\",\r\n  \r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro campo obrigatorio XP valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"  pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo obrigatorio XP valido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].xp)).to.eql(83204000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"balelinha 333\",\r\n  \"genero\": \"Feminino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 83204000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro campo obrigatorio XP com preenchimento menor que o permitido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo obrigatorio XP com preenchimento menor que o permitido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'xp' deve ter entre '1' e '154800875592000' caracteres\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"balelinha 333\",\r\n  \"genero\": \"Feminino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro campo obrigatorio XP com preenchimento maior que o permitido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo obrigatorio XP com preenchimento maior que o permitido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'xp' é do tipo int64 o valor máximo permitido é de '9007199254740991'\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"balelinha 333\",\r\n  \"genero\": \"Feminino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": 2342342413532634563457373\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro campo obrigatorio XP com preenchimento null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo obrigatorio XP com preenchimento null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'xp' deve ter entre '1' e '154800875592000' caracteres\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"balelinha 333\",\r\n  \"genero\": \"Feminino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\",\r\n  \"xp\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						},
						{
							"name": "/ Cadastro Não enviar o campo obrigatorio XP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Não enviar o campo obrigatorio XP\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'xp' é obrigatório\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"balelinha 333\",\r\n  \"genero\": \"Feminino\" ,\r\n  \"raça\": \"humano\",\r\n  \"classe\": \"Guerreiro\"\r\n  \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/cadastrar",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"cadastrar"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/Atualizar/{id}",
					"item": [
						{
							"name": "/Atualizar/{id} sem token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 401\", function () {\r",
											"  pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Atualizar sem Token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData.Message)).to.eql(\"Usuário não está autorizado, faça login novamente\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"lva Brambledanc\",\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 5523166268\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} Valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Atualizar valido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].nome)).to.eql(\"Belelinha 22\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Belelinha 22\",\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 5523166268\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} com ID invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 404\", function () {\r",
											"  pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Atualizar valido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData.Message)).to.eql(\"O campo 'id' não foi encontrado\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Belelinha 222\",\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 5523166268\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/44",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"44"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} campo  nome vazio",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo nome vazio\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'nome' está vazio\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"\",\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 5523166268\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} campo  nome com string numerica",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo nome com string numerica\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'nome' está com formato inválido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"123123123123\",\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 5523166268\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} campo nome com numeros",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo nome com numeros\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'nome' está com formato inválido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": 11231412,\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 5523166268\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} campo nome com null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo nome null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'nome' está com formato inválido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": null,\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 5523166268\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} campo genero valido, Masculino",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo genero valido, Masculino\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].genero)).to.eql(\"Masculino\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Balelinha 111\",\r\n    \"genero\": \"Masculino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 5523166268\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} campo genero valido, Feminino",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo genero valido, Feminino\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].genero)).to.eql(\"Feminino\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Balelinha 111\",\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 5523166268\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} campo genero invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo genero invalido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'genero' está com formato inválido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Balelinha 111\",\r\n    \"genero\": \"astronauta\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 5523166268\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} campo XP valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo genero valido, Masculino\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].xp)).to.eql(5523166268);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Balelinha 666\",\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 5523166268\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} campo XP com o preenchimento menor que o permitido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo XP com o preenchimento menor que o permitido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'xp' deve ter entre '1' e '154800875592000' caracteres\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Balelinha 666\",\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} campo XP com o preenchimento maior que o permitido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo XP com o preenchimento maior que o permitido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'xp' é do tipo int64 o valor máximo permitido é de '9007199254740991'\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Balelinha 666\",\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": 4234252352352352352\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Atualizar/{id} campo XP com o preenchimento null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo XP com o preenchimento null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'xp' deve ter entre '1' e '154800875592000' caracteres\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Balelinha 666\",\r\n    \"genero\": \"Feminino\",\r\n    \"raça\": \"Elfo\",\r\n    \"classe\": \"Guerreiro\",\r\n    \"xp\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/atualizar/20",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"atualizar",
										"20"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/Delete/{id}",
					"item": [
						{
							"name": "/Delete/{id} sem token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 401\", function () {\r",
											"  pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Deletar sem Token \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData.Message)).to.eql(\"Usuário não está autorizado, faça login novamente\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL_BASE}}herois/deletar/2",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"deletar",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Delete/{id} com ID valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL_BASE}}herois/deletar/1",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"deletar",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Delete/{id} com ID invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 404\", function () {\r",
											"  pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Deletar sem Token \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData.Message)).to.eql(\"O campo 'id' não foi encontrado\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL_BASE}}herois/deletar/555",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"deletar",
										"555"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/Rebase",
					"item": [
						{
							"name": "/Rebase sem token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 401\", function () {\r",
											"  pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Rebase sem Token \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData.Message)).to.eql(\"Usuário não está autorizado, faça login novamente\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"senha\": \"balelinha123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/rebase",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"rebase"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Rebase Valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", function () {\r",
											"  pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Rebase valido\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].id)).to.eql(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"senha\": \"balelinha123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/rebase",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"rebase"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Rebase com senha invalida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 401\", function () {\r",
											"  pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Rebase com senha invalida\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData.Message)).to.eql(\"Usuário não está autorizado, senha incorreta\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"senha\": \"balelinha12\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/rebase",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"rebase"
									]
								}
							},
							"response": []
						},
						{
							"name": "/Rebase com senha vazia",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Rebase com senha vazia\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect((jsonData[0].Message)).to.eql(\"O campo 'senha' está vazio\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"senha\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_BASE}}herois/rebase",
									"host": [
										"{{URL_BASE}}herois"
									],
									"path": [
										"rebase"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}